#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (5, 0, 0)
                double radius = 5
            }
            dictionary Perspective = {
                double3 position = (-0.7144566969525578, 1.4805331706369935, 1.1051233802027)
                double3 target = (2.2988447434607826, -4.8690274549232235, -1.2133286910885837)
            }
            dictionary Right = {
                double3 position = (0, -5, 0)
                double radius = 5
            }
            dictionary Top = {
                double3 position = (0, 0, 5)
                double radius = 5
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./quadruped_87.usda"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        int refinementOverrideImplVersion = 0
        dictionary renderSettings = {
            bool "rtx:useViewLightingMode" = 1
        }
    }
    defaultPrim = "quadruped_template"
    endTimeCode = 1000000
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 60
    upAxis = "Z"
)

over "Render" (
    hide_in_stage_window = true
)
{
}

def Xform "quadruped_template" (
    prepend apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
)
{
    quatd xformOp:orient = (1, 0, 0, 0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0.7580097244488285)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Cube "base" (
        delete apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsMassAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 17.17
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        double size = 1
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (0.39, 0.14, 0.18)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "LF_HAA" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            float drive:angular:physics:targetPosition = 0
            float drive:angular:physics:targetVelocity = 0
            uniform token physics:axis = "X"
            rel physics:body0 = </quadruped_template/base>
            rel physics:body1 = </quadruped_template/LF_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0.5, 0.5, -2.352116e-7)
            point3f physics:localPos1 = (2.3841857e-9, 1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -40
            float physics:upperLimit = 20
            uniform token purpose = "default"
            token visibility = "inherited"
        }

        def PhysicsRevoluteJoint "RF_HAA" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            float drive:angular:physics:targetPosition = 0
            uniform token physics:axis = "X"
            rel physics:body0 = </quadruped_template/base>
            rel physics:body1 = </quadruped_template/RF_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0.5, -0.5, -2.352116e-7)
            point3f physics:localPos1 = (2.3841857e-9, -1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -40
            float physics:upperLimit = 20
            uniform token purpose = "default"
            token visibility = "inherited"
        }

        def PhysicsRevoluteJoint "LH_HAA" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "X"
            rel physics:body0 = </quadruped_template/base>
            rel physics:body1 = </quadruped_template/LH_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.5, 0.5, -2.352116e-7)
            point3f physics:localPos1 = (-2.3841857e-9, 1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -40
            float physics:upperLimit = 20
            uniform token purpose = "default"
            token visibility = "inherited"
        }

        def PhysicsRevoluteJoint "RH_HAA" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "X"
            rel physics:body0 = </quadruped_template/base>
            rel physics:body1 = </quadruped_template/RH_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.5, -0.5, -2.352116e-7)
            point3f physics:localPos1 = (-2.3841857e-9, -1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -40
            float physics:upperLimit = 20
            uniform token purpose = "default"
            token visibility = "inherited"
        }
    }

    def Sphere "LF_HIP" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.03, -0.03, -0.03), (0.03, 0.03, 0.03)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.51
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.04
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.195, 0.07, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "LF_HFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            float drive:angular:physics:targetPosition = 0
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/LF_THIGH>
            rel physics:body1 = </quadruped_template/LF_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.49999988, -1.9, 7.947286e-8)
            point3f physics:localPos1 = (2.3841857e-9, 1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (0.70710677, 0, -0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 6.664002e-8, 0)
            float physics:lowerLimit = -180
            float physics:upperLimit = 180
        }
    }

    def Sphere "RF_HIP" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.03, -0.03, -0.03), (0.03, 0.03, 0.03)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.51
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.04
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.195, -0.07, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "RF_HFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            float drive:angular:physics:targetPosition = 0
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/RF_THIGH>
            rel physics:body1 = </quadruped_template/RF_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.49999988, 1.9, 7.947286e-8)
            point3f physics:localPos1 = (2.3841857e-9, -1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (0.70710677, 0, -0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 6.664002e-8, 0)
            float physics:lowerLimit = -180
            float physics:upperLimit = 180
        }
    }

    def Sphere "LH_HIP" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.03, -0.03, -0.03), (0.03, 0.03, 0.03)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.51
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.04
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (-0.195, 0.07, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "LH_HFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/LH_THIGH>
            rel physics:body1 = </quadruped_template/LH_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.49999988, -1.9, -7.947286e-8)
            point3f physics:localPos1 = (-2.3841857e-9, 1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (0.70710677, 0, -0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 6.664002e-8, 0)
            float physics:lowerLimit = -180
            float physics:upperLimit = 180
        }
    }

    def Sphere "RH_HIP" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.03, -0.03, -0.03), (0.03, 0.03, 0.03)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.51
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.04
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (-0.195, -0.07, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "RH_HFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/RH_THIGH>
            rel physics:body1 = </quadruped_template/RH_HIP>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.49999988, 1.9, -7.947286e-8)
            point3f physics:localPos1 = (-2.3841857e-9, -1.7881393e-9, -2.5873275e-8)
            quatf physics:localRot0 = (0.70710677, 0, -0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 6.664002e-8, 0)
            float physics:lowerLimit = -180
            float physics:upperLimit = 180
        }
    }

    def Cube "LF_THIGH" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.76
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.23, 0.03, 0.04)
        double3 xformOp:translate = (0.195, 0.125, -0.115)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "LF_KFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/LF_CALF>
            rel physics:body1 = </quadruped_template/LF_THIGH>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.5, -2.4300354e-7, 1.4901161e-7)
            point3f physics:localPos1 = (0.5, 0, 0)
            quatf physics:localRot0 = (1, 0, -1.7114271e-8, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -160
            float physics:upperLimit = 160
        }
    }

    def Cube "RF_THIGH" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.76
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.23, 0.03, 0.04)
        double3 xformOp:translate = (0.195, -0.125, -0.115)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "RF_KFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/RF_CALF>
            rel physics:body1 = </quadruped_template/RF_THIGH>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.5, 2.4300354e-7, 1.4901161e-7)
            point3f physics:localPos1 = (0.5, 0, 0)
            quatf physics:localRot0 = (1, 0, -1.7114271e-8, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -160
            float physics:upperLimit = 160
        }
    }

    def Cube "LH_THIGH" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.76
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.23, 0.03, 0.04)
        double3 xformOp:translate = (-0.195, 0.125, -0.115)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "LH_KFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/LH_CALF>
            rel physics:body1 = </quadruped_template/LH_THIGH>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.5, -2.4300354e-7, -1.4901161e-7)
            point3f physics:localPos1 = (0.5, 0, 0)
            quatf physics:localRot0 = (1, 0, -1.7114271e-8, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -160
            float physics:upperLimit = 160
        }
    }

    def Cube "RH_THIGH" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.76
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.23, 0.03, 0.04)
        double3 xformOp:translate = (-0.195, -0.125, -0.115)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "RH_KFE" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            float drive:angular:physics:damping = 1.44
            float drive:angular:physics:stiffness = 74.31
            float drive:angular:physics:targetPosition = 0
            uniform token physics:axis = "Y"
            rel physics:body0 = </quadruped_template/RH_CALF>
            rel physics:body1 = </quadruped_template/RH_THIGH>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (-0.5, 2.4300354e-7, -1.4901161e-7)
            point3f physics:localPos1 = (0.5, 0, 0)
            quatf physics:localRot0 = (1, 0, -1.7114271e-8, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -160
            float physics:upperLimit = 160
        }
    }

    def Cube "LF_CALF" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.18
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.27, 0.02, 0.02)
        double3 xformOp:translate = (0.195, 0.125, -0.365)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsFixedJoint "LF_FF"
        {
            rel physics:body0 = </quadruped_template/LF_FOOT>
            rel physics:body1 = </quadruped_template/LF_CALF>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0, 0, 0.135)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.70710677, 0, 0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Cube "RF_CALF" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.18
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.27, 0.02, 0.02)
        double3 xformOp:translate = (0.195, -0.125, -0.365)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsFixedJoint "RF_FF"
        {
            rel physics:body0 = </quadruped_template/RF_FOOT>
            rel physics:body1 = </quadruped_template/RF_CALF>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0, 0, 0.135)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.70710677, 0, 0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Cube "LH_CALF" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.18
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.27, 0.02, 0.02)
        double3 xformOp:translate = (-0.195, 0.125, -0.365)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsFixedJoint "LH_FF"
        {
            rel physics:body0 = </quadruped_template/LH_FOOT>
            rel physics:body1 = </quadruped_template/LH_CALF>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0, 0, 0.135)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.70710677, 0, 0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Cube "RH_CALF" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI", "PhysicsMassAPI"]
    )
    {
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.18
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double size = 1
        quatd xformOp:orient = (0.7071067811865476, 0, 0.7071067811865475, 0)
        double3 xformOp:scale = (0.27, 0.02, 0.02)
        double3 xformOp:translate = (-0.195, -0.125, -0.365)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsFixedJoint "RH_FF"
        {
            rel physics:body0 = </quadruped_template/RH_FOOT>
            rel physics:body1 = </quadruped_template/RH_CALF>
            float physics:breakForce = inf
            float physics:breakTorque = inf
            point3f physics:localPos0 = (0, 0, 0.135)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.70710677, 0, 0.70710677, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Sphere "LF_FOOT" (
        delete apiSchemas = ["PhysicsMassAPI"]
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
    )
    {
        float3[] extent = [(-0.02, -0.02, -0.02), (0.02, 0.02, 0.02)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.02
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.195, 0.125, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Sphere "RF_FOOT" (
        delete apiSchemas = ["PhysicsMassAPI"]
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
    )
    {
        float3[] extent = [(-0.02, -0.02, -0.02), (0.02, 0.02, 0.02)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.02
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.195, -0.125, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Sphere "LH_FOOT" (
        delete apiSchemas = ["PhysicsMassAPI"]
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
    )
    {
        float3[] extent = [(-0.02, -0.02, -0.02), (0.02, 0.02, 0.02)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.02
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (-0.195, 0.125, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Sphere "RH_FOOT" (
        delete apiSchemas = ["PhysicsMassAPI"]
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
    )
    {
        float3[] extent = [(-0.02, -0.02, -0.02), (0.02, 0.02, 0.02)]
        bool physics:collisionEnabled = 1
        bool physics:kinematicEnabled = 0
        bool physics:rigidBodyEnabled = 1
        bool physxRigidBody:disableGravity = 0
        double radius = 0.02
        custom bool refinementEnableOverride = 1
        custom int refinementLevel = 2
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (-0.195, -0.125, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

